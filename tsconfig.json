{
  "exclude": [
    "node_modules"
  ],
  "compilerOptions": {
    /* ------------------------ */
    /* Language and Environment */
    /* ------------------------ */
    /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "target": "ES2020",
    /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "lib": [
      "ES2020",
      "DOM",
      "DOM.Iterable"
    ],
    /* ------- */
    /* Modules */
    /* ------- */
    /* Specify what module code is generated. */
    "module": "ESNext",
    /* Specify how TypeScript looks up a file from a given module specifier. */
    "moduleResolution": "bundler",
    /* Use the package.json 'exports' field when resolving package imports. */
    "resolvePackageJsonExports": true,
    /* Use the package.json 'imports' field when resolving imports. */
    "resolvePackageJsonImports": true,
    /* Enable importing .json files. */
    "resolveJsonModule": true,
    /* ------------------ */
    /* JavaScript Support */
    /* ------------------ */
    /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "allowJs": true,
    /* Enable error reporting in type-checked JavaScript files. */
    "checkJs": true,
    /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */
    // "maxNodeModuleJsDepth": 1,
    /* ------------------- */
    /* Interop Constraints */
    /* ------------------- */
    /* Ensure that each file can be safely transpiled without relying on other imports. */
    // "isolatedModules": true,
    /* Allow 'import x from y' when a module doesn't have a default export. */
    "allowSyntheticDefaultImports": true,
    /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "esModuleInterop": true,
    /* Ensure that casing is correct in imports. */
    "forceConsistentCasingInFileNames": true,
    /* ------------- */
    /* Type Checking */
    /* ------------- */
    /* Enable all strict type-checking options. */
    "strict": true,
    /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitAny": false,
    /* When type checking, take into account 'null' and 'undefined'. */
    "strictNullChecks": false,
    /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    // "strictFunctionTypes": true,
    /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    // "strictBindCallApply": true,
    /* Check for class properties that are declared but not set in the constructor. */
    // "strictPropertyInitialization": true,
    /* Enable error reporting when 'this' is given the type 'any'. */
    // "noImplicitThis": true,
    /* Default catch clause variables as 'unknown' instead of 'any'. */
    // "useUnknownInCatchVariables": true,
    /* Ensure 'use strict' is always emitted. */
    // "alwaysStrict": true,
    /* Enable error reporting when local variables aren't read. */
    // "noUnusedLocals": true,
    /* Raise an error when a function parameter isn't read. */
    // "noUnusedParameters": true,
    /* Interpret optional property types as written, rather than adding 'undefined'. */
    // "exactOptionalPropertyTypes": true,
    /* Enable error reporting for codepaths that do not explicitly return in a function. */
    // "noImplicitReturns": true,
    /* Enable error reporting for fallthrough cases in switch statements. */
    // "noFallthroughCasesInSwitch": true,
    /* Add 'undefined' to a type when accessed using an index. */
    // "noUncheckedIndexedAccess": true,
    /* Ensure overriding members in derived classes are marked with an override modifier. */
    // "noImplicitOverride": true,
    /* Enforces using indexed accessors for keys declared using an indexed type. */
    // "noPropertyAccessFromIndexSignature": true,
    /* Disable error reporting for unused labels. */
    // "allowUnusedLabels": true,
    /* Disable error reporting for unreachable code. */
    // "allowUnreachableCode": true,
    /* ------------ */
    /* Completeness */
    /* ------------ */
    /* Skip type checking all .d.ts files. */
    "skipLibCheck": true
  }
}
